// Code generated by ent, DO NOT EDIT.

package user

import (
	"time"
)

const (
	// Label holds the string label denoting the user type in the database.
	Label = "user"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldFirstName holds the string denoting the first_name field in the database.
	FieldFirstName = "first_name"
	// FieldLastName holds the string denoting the last_name field in the database.
	FieldLastName = "last_name"
	// FieldAddress holds the string denoting the address field in the database.
	FieldAddress = "address"
	// FieldPostalCode holds the string denoting the postal_code field in the database.
	FieldPostalCode = "postal_code"
	// FieldTel holds the string denoting the tel field in the database.
	FieldTel = "tel"
	// FieldDriverLicenseID holds the string denoting the driver_license_id field in the database.
	FieldDriverLicenseID = "driver_license_id"
	// FieldDriverLicenseCountry holds the string denoting the driver_license_country field in the database.
	FieldDriverLicenseCountry = "driver_license_country"
	// FieldBirthday holds the string denoting the birthday field in the database.
	FieldBirthday = "birthday"
	// EdgeCard holds the string denoting the card edge name in mutations.
	EdgeCard = "card"
	// EdgeNoteFlaws holds the string denoting the note_flaws edge name in mutations.
	EdgeNoteFlaws = "note_flaws"
	// EdgeAccount holds the string denoting the account edge name in mutations.
	EdgeAccount = "account"
	// Table holds the table name of the user in the database.
	Table = "users"
	// CardTable is the table that holds the card relation/edge.
	CardTable = "cards"
	// CardInverseTable is the table name for the Card entity.
	// It exists in this package in order to avoid circular dependency with the "card" package.
	CardInverseTable = "cards"
	// CardColumn is the table column denoting the card relation/edge.
	CardColumn = "user_card"
	// NoteFlawsTable is the table that holds the note_flaws relation/edge.
	NoteFlawsTable = "flaws"
	// NoteFlawsInverseTable is the table name for the Flaw entity.
	// It exists in this package in order to avoid circular dependency with the "flaw" package.
	NoteFlawsInverseTable = "flaws"
	// NoteFlawsColumn is the table column denoting the note_flaws relation/edge.
	NoteFlawsColumn = "user_note_flaws"
	// AccountTable is the table that holds the account relation/edge.
	AccountTable = "users"
	// AccountInverseTable is the table name for the Account entity.
	// It exists in this package in order to avoid circular dependency with the "account" package.
	AccountInverseTable = "accounts"
	// AccountColumn is the table column denoting the account relation/edge.
	AccountColumn = "account_user"
)

// Columns holds all SQL columns for user fields.
var Columns = []string{
	FieldID,
	FieldFirstName,
	FieldLastName,
	FieldAddress,
	FieldPostalCode,
	FieldTel,
	FieldDriverLicenseID,
	FieldDriverLicenseCountry,
	FieldBirthday,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "users"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"account_user",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultFirstName holds the default value on creation for the "first_name" field.
	DefaultFirstName string
	// DefaultLastName holds the default value on creation for the "last_name" field.
	DefaultLastName string
	// DefaultAddress holds the default value on creation for the "address" field.
	DefaultAddress string
	// DefaultPostalCode holds the default value on creation for the "postal_code" field.
	DefaultPostalCode string
	// DefaultTel holds the default value on creation for the "tel" field.
	DefaultTel string
	// DefaultDriverLicenseID holds the default value on creation for the "driver_license_id" field.
	DefaultDriverLicenseID string
	// DefaultDriverLicenseCountry holds the default value on creation for the "driver_license_country" field.
	DefaultDriverLicenseCountry string
	// DefaultBirthday holds the default value on creation for the "birthday" field.
	DefaultBirthday func() time.Time
)
